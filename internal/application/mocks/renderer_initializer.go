// Code generated by mockery v2.47.0. DO NOT EDIT.

package mocks

import (
	domain "github.com/es-debug/backend-academy-2024-go-template/internal/domain"
	mock "github.com/stretchr/testify/mock"
)

// RendererInitializer is an autogenerated mock type for the rendererInitializer type
type RendererInitializer struct {
	mock.Mock
}

type RendererInitializer_Expecter struct {
	mock *mock.Mock
}

func (_m *RendererInitializer) EXPECT() *RendererInitializer_Expecter {
	return &RendererInitializer_Expecter{mock: &_m.Mock}
}

// InitializeAffineTransformations provides a mock function with given fields:
func (_m *RendererInitializer) InitializeAffineTransformations() ([]domain.AffineTransformation, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for InitializeAffineTransformations")
	}

	var r0 []domain.AffineTransformation
	var r1 error
	if rf, ok := ret.Get(0).(func() ([]domain.AffineTransformation, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() []domain.AffineTransformation); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]domain.AffineTransformation)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RendererInitializer_InitializeAffineTransformations_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'InitializeAffineTransformations'
type RendererInitializer_InitializeAffineTransformations_Call struct {
	*mock.Call
}

// InitializeAffineTransformations is a helper method to define mock.On call
func (_e *RendererInitializer_Expecter) InitializeAffineTransformations() *RendererInitializer_InitializeAffineTransformations_Call {
	return &RendererInitializer_InitializeAffineTransformations_Call{Call: _e.mock.On("InitializeAffineTransformations")}
}

func (_c *RendererInitializer_InitializeAffineTransformations_Call) Run(run func()) *RendererInitializer_InitializeAffineTransformations_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *RendererInitializer_InitializeAffineTransformations_Call) Return(affineTransformations []domain.AffineTransformation, err error) *RendererInitializer_InitializeAffineTransformations_Call {
	_c.Call.Return(affineTransformations, err)
	return _c
}

func (_c *RendererInitializer_InitializeAffineTransformations_Call) RunAndReturn(run func() ([]domain.AffineTransformation, error)) *RendererInitializer_InitializeAffineTransformations_Call {
	_c.Call.Return(run)
	return _c
}

// InitializeFractalImage provides a mock function with given fields:
func (_m *RendererInitializer) InitializeFractalImage() (*domain.FractalImage, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for InitializeFractalImage")
	}

	var r0 *domain.FractalImage
	var r1 error
	if rf, ok := ret.Get(0).(func() (*domain.FractalImage, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() *domain.FractalImage); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.FractalImage)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RendererInitializer_InitializeFractalImage_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'InitializeFractalImage'
type RendererInitializer_InitializeFractalImage_Call struct {
	*mock.Call
}

// InitializeFractalImage is a helper method to define mock.On call
func (_e *RendererInitializer_Expecter) InitializeFractalImage() *RendererInitializer_InitializeFractalImage_Call {
	return &RendererInitializer_InitializeFractalImage_Call{Call: _e.mock.On("InitializeFractalImage")}
}

func (_c *RendererInitializer_InitializeFractalImage_Call) Run(run func()) *RendererInitializer_InitializeFractalImage_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *RendererInitializer_InitializeFractalImage_Call) Return(_a0 *domain.FractalImage, _a1 error) *RendererInitializer_InitializeFractalImage_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *RendererInitializer_InitializeFractalImage_Call) RunAndReturn(run func() (*domain.FractalImage, error)) *RendererInitializer_InitializeFractalImage_Call {
	_c.Call.Return(run)
	return _c
}

// InitializeNonlinearTransformations provides a mock function with given fields:
func (_m *RendererInitializer) InitializeNonlinearTransformations() ([]domain.Transformation, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for InitializeNonlinearTransformations")
	}

	var r0 []domain.Transformation
	var r1 error
	if rf, ok := ret.Get(0).(func() ([]domain.Transformation, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() []domain.Transformation); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]domain.Transformation)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RendererInitializer_InitializeNonlinearTransformations_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'InitializeNonlinearTransformations'
type RendererInitializer_InitializeNonlinearTransformations_Call struct {
	*mock.Call
}

// InitializeNonlinearTransformations is a helper method to define mock.On call
func (_e *RendererInitializer_Expecter) InitializeNonlinearTransformations() *RendererInitializer_InitializeNonlinearTransformations_Call {
	return &RendererInitializer_InitializeNonlinearTransformations_Call{Call: _e.mock.On("InitializeNonlinearTransformations")}
}

func (_c *RendererInitializer_InitializeNonlinearTransformations_Call) Run(run func()) *RendererInitializer_InitializeNonlinearTransformations_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *RendererInitializer_InitializeNonlinearTransformations_Call) Return(nonlinearTransformations []domain.Transformation, err error) *RendererInitializer_InitializeNonlinearTransformations_Call {
	_c.Call.Return(nonlinearTransformations, err)
	return _c
}

func (_c *RendererInitializer_InitializeNonlinearTransformations_Call) RunAndReturn(run func() ([]domain.Transformation, error)) *RendererInitializer_InitializeNonlinearTransformations_Call {
	_c.Call.Return(run)
	return _c
}

// NewRendererInitializer creates a new instance of RendererInitializer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRendererInitializer(t interface {
	mock.TestingT
	Cleanup(func())
}) *RendererInitializer {
	mock := &RendererInitializer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
